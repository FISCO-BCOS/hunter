# Copyright (c) 2021, yujiechen
# All rights reserved.

cmake_minimum_required(VERSION 3.0)
project(Hunter)

include(ExternalProject) # ExternalProject_Add

# Scheme for download and install tbb

list(APPEND CMAKE_MODULE_PATH "@HUNTER_SELF@/cmake/modules")
include(hunter_status_debug)
include(hunter_assert_not_empty_string)
include(hunter_tbb_install_tools)

hunter_status_debug("Scheme: url_sha1_tbb")

# Check preconditions
hunter_assert_not_empty_string("@HUNTER_SELF@")
hunter_assert_not_empty_string("@HUNTER_EP_NAME@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_URL@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_SHA1@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_DOWNLOAD_DIR@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_SOURCE_DIR@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_INSTALL_PREFIX@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_LICENSE_DIR@")
hunter_assert_not_empty_string("@HUNTER_GLOBAL_SCRIPT_DIR@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_SCRIPT_DIR@")
hunter_assert_not_empty_string("@HUNTER_TLS_VERIFY@")
if("@HUNTER_PACKAGE_LOG_BUILD@")
  set(log_build 1)
else()
  set(log_build 0)
endif()

if("@HUNTER_PACKAGE_LOG_INSTALL@" OR "@HUNTER_SUPPRESS_LIST_OF_FILES@")
  set(log_install 1)
else()
  set(log_install 0)
endif()
set(HUNTER_PACKAGE_SOURCE_DIR "@HUNTER_PACKAGE_SOURCE_DIR@")

set(TBB_LIB_SUFFIX a)
if (APPLE)
    set(ENABLE_STD_LIB stdlib=libc++)
endif()
ExternalProject_Add(
        @HUNTER_EP_NAME@
         URL
        "@HUNTER_PACKAGE_URL@"
        URL_HASH
        SHA1=@HUNTER_PACKAGE_SHA1@
        DOWNLOAD_DIR
        "@HUNTER_PACKAGE_DOWNLOAD_DIR@"
         TLS_VERIFY
        "@HUNTER_TLS_VERIFY@"
        SOURCE_DIR 
        "@HUNTER_PACKAGE_SOURCE_DIR@"
        BINARY_DIR
        "@HUNTER_PACKAGE_SOURCE_DIR@"
        INSTALL_DIR
        "@HUNTER_PACKAGE_INSTALL_PREFIX@/lib"
        CONFIGURE_COMMAND
            ""
        BUILD_COMMAND
            make extra_inc=big_iron.inc ${ENABLE_STD_LIB}
        INSTALL_COMMAND
            bash -c "/bin/cp -f @HUNTER_PACKAGE_SOURCE_DIR@/build/*_release/libtbb.${TBB_LIB_SUFFIX}* @HUNTER_PACKAGE_INSTALL_PREFIX@/lib/"
        COMMAND
            "@CMAKE_COMMAND@"
            -E
            copy_directory
            "@HUNTER_PACKAGE_SOURCE_DIR@/include/"
            "@HUNTER_PACKAGE_INSTALL_PREFIX@/include/"
        COMMAND
            # Copy license files
            "@CMAKE_COMMAND@"
            "-C@HUNTER_ARGS_FILE@" # for 'HUNTER_INSTALL_LICENSE_FILES'
            "-Dsrcdir=@HUNTER_PACKAGE_SOURCE_DIR@"
            "-Ddstdir=@HUNTER_PACKAGE_LICENSE_DIR@"
            -P
            "@HUNTER_SELF@/scripts/try-copy-license.cmake"
        LOG_BUILD ${log_build}
        LOG_INSTALL ${log_install}
)
set(build_config_type "Release")
string(TOUPPER ${build_config_type} TARGET_CONFIGURATION)
set(HUNTER_PACKAGE_INSTALL_PREFIX "@HUNTER_PACKAGE_INSTALL_PREFIX@")

set(TBB_LIBRARY_FILE libtbb.${TBB_LIB_SUFFIX})
set(TARGET_LIB_FILE "${TBB_LIBRARY_FILE}")

set(HUNTER_SELF "@HUNTER_SELF@")  
hunter_install_tbb_targets()

set(BUILD_SHARED_LIBS                 "FALSE")
set(HUNTER_tbb_VERSION             "@HUNTER_tbb_VERSION@")
set(HUNTER_PACKAGE_CONFIGURATION_TYPES "@HUNTER_PACKAGE_CONFIGURATION_TYPES@")
set(HUNTER_PACKAGE_INSTALL_PREFIX      "@HUNTER_PACKAGE_INSTALL_PREFIX@")
hunter_install_tbb_config()
